ðŸŒ± Basic Level â€“ Must Know
These test understanding of the tree structure itself:

Inorder / Preorder / Postorder Traversal (recursive and iterative)

Level Order Traversal (BFS)

Find Height / Depth of Tree

Check if a Binary Tree is Balanced

Find the Diameter of a Binary Tree

Count the Number of Nodes / Leaves

Search a Value in Binary Search Tree (BST)

Insert/Delete in BST

Mirror a Binary Tree

Lowest Common Ancestor (LCA) in Binary Tree

Root to node Path

ðŸŒ¿ Medium Level â€“ Problem Solving
These often come up in FAANG or product-based company rounds:

Validate if a Binary Tree is a BST

Right / Left View of a Binary Tree

top view of a binary tree

Zigzag Level Order Traversal

Convert Sorted Array to Balanced BST

Print All Root-to-Leaf Paths

Find Path with Given Sum

Find Distance Between Two Nodes

Boundary Traversal of Binary Tree

Flatten Binary Tree to Linked List

Convert Binary Tree to Doubly Linked List

ðŸŒ³ Advanced Level â€“ Optimization / Trickier Logic
These questions assess deep understanding and optimization:

Serialize and Deserialize Binary Tree

Construct Tree from Inorder and Preorder/Postorder

Kth Smallest / Largest in BST

Vertical Order Traversal

Maximum Path Sum in Binary Tree (Leetcode #124)

Find All Nodes Distance K from a Target

Trie Implementation (Prefix Tree)

Segment Tree / Fenwick Tree (if asked in CP-heavy roles)



Construct the Binary Tree from Postorder and Inorder Traversal
Serialize and deserialize Binary Tree
Morris Preorder Traversal of a Binary Tree
Morris Inorder Traversal of a Binary Tree
Flatten Binary Tree to LinkedList
LCA in Binary Tree
Maximum width of a Binary Tree
Check for Children Sum Property
Print all the Nodes at a distance of K in a Binary Tree
Minimum time taken to BURN the Binary Tree from a Node
Count total Nodes in a COMPLETE Binary Tree
Requirements needed to construct a Unique Binary Tree | Theory
Construct Binary Tree from inorder and preorder

Ceil in a Binary Search Tree
Merge 2 BST's
Two Sum In BST | Check if there exists a pair with Sum K
Recover BST | Correct BST with two nodes swapped
Largest BST in Binary Tree
Floor in a Binary Search Tree
Insert a given Node in Binary Search Tree
Delete a Node in Binary Search Tree
Find K-th smallest/largest element in BST
Check if a tree is a BST or BT
LCA in Binary Search Tree
Construct a BST from a preorder traversal
Inorder Successor/Predecessor in BST




